{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// import flatpickr from \"flatpickr\";\n// import \"flatpickr/dist/flatpickr.min.css\";\n// import iziToast from \"izitoast\";\n// import \"izitoast/dist/css/iziToast.min.css\";\n\n// const startButton = document.querySelector('button[data-start]');\n// const datePicker = document.querySelector('#datetime-picker');\n// const timerFields = {\n//     days: document.querySelector('[data-days]'),\n//     hours: document.querySelector('[data-hours]'),\n//     minutes: document.querySelector('[data-minutes]'),\n//     seconds: document.querySelector('[data-seconds]'),\n// };\n\n// let timerInterval;\n// let userSelectedDate = null;\n\n// startButton.disabled = true;\n\n// const options = {\n//     enableTime: true,\n//     time_24hr: true,\n//     defaultDate: new Date(),\n//     minuteIncrement: 1,\n//     onClose(selectedDates) {\n//         const selectedDate = selectedDates[0];\n//         if (selectedDate < new Date()) {\n//             iziToast.error({\n//                 title: \"Error\",\n//                 message: \"Please choose a date in the future\",\n//             });\n//             startButton.disabled = true;\n//         } else {\n//             userSelectedDate = selectedDate;\n//             startButton.disabled = false;\n//         }\n//     },\n// };\n\n// flatpickr(datePicker, options);\n\n// startButton.addEventListener(\"click\", () => {\n//     if (!userSelectedDate) return;\n\n//     const startTime = new Date();\n//     const endTime = userSelectedDate.getTime();\n\n//     startButton.disabled = true;\n//     datePicker.disabled = true;\n\n//     function updateTimer() {\n//         const currentTime = new Date();\n//         const timeRemaining = endTime - currentTime.getTime();\n\n//         if (timeRemaining <= 0) {\n//             clearInterval(timerInterval);\n//             datePicker.disabled = false;\n//             timerFields.days.textContent = '00';\n//             timerFields.hours.textContent = '00';\n//             timerFields.minutes.textContent = '00';\n//             timerFields.seconds.textContent = '00';\n//             return;\n//         }\n\n//         const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n\n//         timerFields.days.textContent = addLeadingZero(days.toString());\n//         timerFields.hours.textContent = addLeadingZero(hours.toString());\n//         timerFields.minutes.textContent = addLeadingZero(minutes.toString());\n//         timerFields.seconds.textContent = addLeadingZero(seconds.toString());\n//     }\n\n//     timerInterval = setInterval(updateTimer, 1000);\n//     updateTimer(); // Initial call to set values at start\n// });\n\n// function convertMs(ms) {\n//     const second = 1000;\n//     const minute = second * 60;\n//     const hour = minute * 60;\n//     const day = hour * 24;\n\n//     const days = Math.floor(ms / day);\n//     const hours = Math.floor((ms % day) / hour);\n//     const minutes = Math.floor(((ms % day) % hour) / minute);\n//     const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//     return { days, hours, minutes, seconds };\n// }\n\n// function addLeadingZero(value) {\n//     return value.padStart(2, '0');\n// }\nimport flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst datetimePicker = document.getElementById('datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst daysField = document.querySelector('[data-days]');\nconst hoursField = document.querySelector('[data-hours]');\nconst minutesField = document.querySelector('[data-minutes]');\nconst secondsField = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const selectedDate = selectedDates[0];\n\n        if (selectedDate <= new Date()) {\n            iziToast.warning({\n                title: 'Invalid Date',\n                message: 'Please choose a date in the future',\n            });\n            startButton.disabled = true;\n        } else {\n            userSelectedDate = selectedDate;\n            startButton.disabled = false;\n        }\n    },\n};\n\nflatpickr(datetimePicker, options);\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n    daysField.textContent = addLeadingZero(days);\n    hoursField.textContent = addLeadingZero(hours);\n    minutesField.textContent = addLeadingZero(minutes);\n    secondsField.textContent = addLeadingZero(seconds);\n}\n\nfunction startCountdown() {\n    const targetDate = new Date(userSelectedDate);\n    const now = new Date();\n    const timeDiff = targetDate - now;\n\n    if (timeDiff <= 0) {\n        clearInterval(countdownInterval);\n        updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n        datetimePicker.disabled = false; // Увімкнути, щоб обрати нову дату\n        return;\n    }\n\n    const timeValues = convertMs(timeDiff);\n    updateTimerDisplay(timeValues);\n\n    countdownInterval = setInterval(() => {\n        const now = new Date();\n        const timeDiff = targetDate - now;\n\n        if (timeDiff <= 0) {\n            clearInterval(countdownInterval);\n            updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n            datetimePicker.disabled = false; // Увімкнути, щоб обрати нову дату\n            return;\n        }\n\n        const timeValues = convertMs(timeDiff);\n        updateTimerDisplay(timeValues);\n    }, 1000);\n}\n\nstartButton.addEventListener('click', () => {\n    if (userSelectedDate && !countdownInterval) {\n        datetimePicker.disabled = true; // Відключити, щоб не можна було змінити дату під час відліку\n        startButton.disabled = true; // Відключити кнопку \"Start\" під час роботи таймера\n        startCountdown();\n    }\n});"],"names":["datetimePicker","startButton","daysField","hoursField","minutesField","secondsField","userSelectedDate","countdownInterval","options","selectedDates","selectedDate","iziToast","flatpickr","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","updateTimerDisplay","startCountdown","targetDate","timeDiff","timeValues"],"mappings":"2FAkGA,MAAMA,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAE5D,IAAIC,EAAmB,KACnBC,EAAoB,KAExB,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAeD,EAAc,CAAC,EAEhCC,GAAgB,IAAI,MACpBC,EAAS,QAAQ,CACb,MAAO,eACP,QAAS,oCACzB,CAAa,EACDV,EAAY,SAAW,KAEvBK,EAAmBI,EACnBT,EAAY,SAAW,GAE9B,CACL,EAEAW,EAAUZ,EAAgBQ,CAAO,EAEjC,SAASK,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC,CAEA,SAASC,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASC,EAAmB,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC3DlB,EAAU,YAAcW,EAAeI,CAAI,EAC3Cd,EAAW,YAAcU,EAAeK,CAAK,EAC7Cd,EAAa,YAAcS,EAAeM,CAAO,EACjDd,EAAa,YAAcQ,EAAeO,CAAO,CACrD,CAEA,SAASE,GAAiB,CACtB,MAAMC,EAAa,IAAI,KAAKjB,CAAgB,EAEtCkB,EAAWD,EADL,IAAI,KAGhB,GAAIC,GAAY,EAAG,CACf,cAAcjB,CAAiB,EAC/Bc,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChErB,EAAe,SAAW,GAC1B,MACH,CAED,MAAMyB,EAAaV,EAAUS,CAAQ,EACrCH,EAAmBI,CAAU,EAE7BlB,EAAoB,YAAY,IAAM,CAElC,MAAMiB,EAAWD,EADL,IAAI,KAGhB,GAAIC,GAAY,EAAG,CACf,cAAcjB,CAAiB,EAC/Bc,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChErB,EAAe,SAAW,GAC1B,MACH,CAED,MAAMyB,EAAaV,EAAUS,CAAQ,EACrCH,EAAmBI,CAAU,CAChC,EAAE,GAAI,CACX,CAEAxB,EAAY,iBAAiB,QAAS,IAAM,CACpCK,GAAoB,CAACC,IACrBP,EAAe,SAAW,GAC1BC,EAAY,SAAW,GACvBqB,IAER,CAAC"}